/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pomodoro;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;
import javafx.scene.shape.Ellipse;
import javafx.scene.Group;
import javafx.stage.StageStyle;
import javafx.scene.paint.Color;
import javafx.scene.input.MouseButton;
import javafx.scene.shape.Arc;
import javafx.scene.shape.ArcType;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import java.io.File;

import java.util.Timer;
import java.util.TimerTask;

import org.checkerframework.checker.guieffect.qual.UI;

import pomodoro.timer.*;
import pomodoro.ui.*;

public class App extends Application
{
    private double x, y;

    @Override
    public void start(Stage stage)
    {
        TimerView timerView = new TimerView();
        Group root = timerView.getRoot();

        Scene scene = new Scene(root, 512, 512, UIConfig.DEFAULT_BACKGROUND_COLOR);
        //Scene scene = new Scene(root, 512, 512);

        Media sound = new Media(new File("src/main/resources/yokudekimashita.mp3").toURI().toString());
        MediaPlayer mediaPlayer = new MediaPlayer(sound);

        PomodoroTimer pomodoroTimer = new PomodoroTimer();
        CustomableAnimationTimer customableAnimationTimer = new CustomableAnimationTimer(pomodoroTimer);
        customableAnimationTimer.setTimerListener(new TimerListener()
        {
            @Override
            public void onTimerUpdate(double angle)
            {
                timerView.updateAngle(angle);
            }

            @Override
            public void onTimerComplete()
            {
                // 何もないよ
            }
        });
        //customableAnimationTimer.start();

        pomodoroTimer.setTimerListener(new TimerListener()
        {
            @Override
            public void onTimerUpdate(double angle)
            {
                // 何もないよ
            }

            @Override
            public void onTimerComplete()
            {
                //System.out.println("onTimerComplete");
                timerView.updateAngle(0);
                pomodoroTimer.stopTimer();
                customableAnimationTimer.stop();
                mediaPlayer.play();
                pomodoroTimer.nextSession();
            }
        });

        root.setOnMousePressed(mouseEvent ->

        {
            if (!pomodoroTimer.isTimerRunning())
            {
                pomodoroTimer.startTimer();
                customableAnimationTimer.start();
                mediaPlayer.stop();
                mediaPlayer.seek(mediaPlayer.getStartTime());
            }
            x = mouseEvent.getSceneX();
            y = mouseEvent.getSceneY();
            if (mouseEvent.getButton() == MouseButton.SECONDARY)
            {
                pomodoroTimer.stopTimer();
                customableAnimationTimer.stop();
                stage.close();
            }
        });
        root.setOnMouseDragged(mouseEvent ->
        {
            stage.setX(mouseEvent.getScreenX() - x);
            stage.setY(mouseEvent.getScreenY() - y);
        });

        stage.setScene(scene);
        stage.initStyle(UIConfig.DEFAULT_STAGE_STYLE);
        stage.minWidthProperty().bind(scene.heightProperty());
        stage.minHeightProperty().bind(scene.widthProperty());
        stage.setAlwaysOnTop(true);
        stage.show();
    }

    public static void main(String[] args)
    {
        launch();
    }
}
